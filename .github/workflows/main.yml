name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_NAME: analyzer

    services:
      postgres:
        image: postgres:12.1
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install package with dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run tests
        env:
          ANALYZER_DB_URL: postgresql://${{ env.DB_USER }}:${{ env.DB_PASSWORD }}@localhost/${{ env.DB_NAME }}
        run: pytest --cov=analyzer --cov-report=term-missing tests/
  
  publish:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
    
      - name: Create a source distribution
        run: make sdist
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build docker image and push into registry
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: |
            mortalis/analyzer-api:0.0.1
            mortalis/analyzer-api:latest
